{"version":3,"file":"bundle.js","sources":["../src/index.js"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// messages\nconst isServer = typeof window === 'undefined';\n\nconst parse5 = isServer ? require('parse5') : null;\n\nconst TOKENIZER = /(\\${[a-z0-9-]+})/gi;\n// Can't use TOKENIZER regex to test due to quirk with global flag\n// https://siderite.blogspot.com/2011/11/careful-when-reusing-javascript-regexp.html\nconst TOKEN_TESTER = /(\\${[a-z0-9-]+})/i;\nconst HTML_TESTER = /<[a-z][\\s\\S]*>/i;\n\n/*\n * Convert attributes of an element to a proper object.\n * @param {DOM.Node} el\n * @returns {object}\n */\nfunction getElementAttrs(el) {\n    if (el.attribs) { // Parse5 AST\n        return el.attribs;\n    } else if (el.attributes && el.attributes.length) {\n        return [].slice.call(el.attributes).reduce((keys, attr) => {\n            keys[attr.name] = attr.value;\n            return keys;\n        }, {});\n    }\n\n    return {};\n}\n\n/*\n * @param {string} error\n * @param {object} options\n * @param {boolean} options.throwErrors\n * @returns {undefined}\n */\nfunction handleError(error, {throwErrors}) {\n    if (throwErrors) {\n        throw new Error(error);\n    } else {\n        console.error(error);\n    }\n}\n\n/*\n * \"Global values\" are defined in `global-values.js` and are available to all messages.\n *  Values passed through `values` param will take precedent over them.\n *\n * @param {String} message String potentially with variables to be interpolated.\n * @param {Object} values Values whose key corresponds with the variables in `message`. Identified with the following syntax: `${variable}`\n * @param {Object} options\n * @return {[Any]} JSX.Node, String, Number, anything renderable by React may be passed as a value.\n */\nfunction interpolateValues(message, values = {}, options) {\n    return message.split(TOKENIZER)\n                  .map((token, i) => {\n                      if (~token.indexOf('${')) {\n                          const key = token.substring(2, token.length - 1);\n                          const value = values[key];\n                          if (!value) {\n                              handleError(`[cp-message-catalogue] Please provide value for ${key}`, options);\n                          }\n                          return React.isValidElement(value) ? React.cloneElement(value, {key: i}) : value;\n                      }\n                      return token;\n                  });\n}\n\n/*\n * Takes a DOM tree and converts it to React Elements while interpolating variables in text.\n *\n * @param {DOM.Node|htmlparser2.Element} elem Tree to traverse\n * @param {Object} values Variables to be interpolated\n * @param {Object} options\n * @return {[String|JSX.Node]}\n */\nfunction transformDOMToReact(elem, values, options) {\n    return [].slice.call(elem.childNodes).map((child, i) => {\n        if (child.nodeType === 3) { // Node.TextNode\n            return interpolateValues(child.nodeValue, values, options);\n        } else if (child.nodeType === 1) { //Node.ElementNode\n            const key = i; // Message will never change dynamically\n            return React.createElement(\n                child.nodeName || child.tagName,\n                {...(getElementAttrs(child)), key},\n                child.childNodes.length ? transformDOMToReact(child, values) : null\n            );\n        }\n\n        throw new Error('[cp-message-catalogue] Unexpected node in message string.');\n    });\n}\n\n/*\n * Takes a string and converts it to React Elements while interpolating variables in text.\n *\n * @param {DOM.Node} elem Tree to traverse\n * @param {Object} values Variables to be interpolated\n * @return {[String|JSX.Node]}\n */\nfunction transformStringToReact(message, values, options) {\n    let div;\n    if (isServer) {\n        // http://inikulin.github.io/parse5/modules/ast.htmlparser2.html\n        div = parse5.parseFragment(message, {treeAdapter: parse5.treeAdapters.htmlparser2});\n    } else {\n        div = document.createElement('div');\n        div.innerHTML = message;\n    }\n    return transformDOMToReact(div, values, options);\n}\n\n/*\n * @param {String} id Identifier of message as defined in cp-message-catalogue\n * @param {Object} values\n * @param {Object} messages Messages whose keys equate to the ids\n * @param {Object} options\n * @param {Object} options.valuesOptional In some cases when message ids are auto-generated,\n *   we may pass values that aren't necessarily needed. If this is true we do not check\n *   for whether there are variables in a string when values are passed.\n * @param {Object} options.throwErrors Throw errors when message and values passed don't align, otherwise warn on console\n * @return {[String|JSX.Node]|String} Renderable through JSX\n */\nconst defaultOptions = {valuesOptional: false, throwErrors: false};\nexport function getMessage(id, values, messages, options) {\n    const opts = {...defaultOptions, ...options};\n    const message = messages[id];\n\n    if (!id) {\n        handleError('[cp-message-catalogue] Please provide ID of needed message', opts);\n        return null;\n    } else if (!message) {\n        handleError(`[cp-message-catalogue] No message for id: ${id}`, opts);\n        return null;\n    }\n\n    const containsVariables = TOKEN_TESTER.test(message);\n    const containsHTML = HTML_TESTER.test(message);\n    if (!opts.valuesOptional && !containsVariables && values) {\n        handleError(`[cp-message-catalogue] Message variables do not match up for ${id}`, opts);\n        return null;\n    } else if (!containsVariables && !values && !containsHTML) {\n        return message;\n    }\n\n    try {\n        if (containsHTML) {\n            return transformStringToReact(message, values, opts);\n        }\n        return interpolateValues(message, values, opts);\n    } catch (e) {\n        handleError(e, opts);\n        return null;\n    }\n}\n\nexport class Message extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.object,\n        messages: PropTypes.object,\n        valuesOptional: PropTypes.bool,\n        throwErrors: PropTypes.bool\n    };\n\n    // perf optimization, messages are permanent when they are rendered\n    shouldComponentUpdate() {\n        return false;\n    }\n\n    render() {\n        const {id, values, messages, valuesOptional, parser, throwErrors} = this.props;\n        // TODO It's possible to return arrays in React 16.\n        return <span>{getMessage(id, values, messages, {valuesOptional, throwErrors})}</span>;\n    }\n}\n"],"names":["isServer","window","parse5","require","TOKENIZER","TOKEN_TESTER","HTML_TESTER","getElementAttrs","el","attribs","attributes","length","slice","call","reduce","keys","attr","name","value","handleError","error","throwErrors","Error","interpolateValues","message","values","options","split","map","token","i","indexOf","key","substring","React","isValidElement","cloneElement","transformDOMToReact","elem","childNodes","child","nodeType","nodeValue","createElement","nodeName","tagName","transformStringToReact","div","parseFragment","treeAdapter","treeAdapters","htmlparser2","document","innerHTML","defaultOptions","valuesOptional","getMessage","id","messages","opts","containsVariables","test","containsHTML","e","Message","props","parser","Component","propTypes","PropTypes","string","isRequired","object","bool"],"mappings":"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"}